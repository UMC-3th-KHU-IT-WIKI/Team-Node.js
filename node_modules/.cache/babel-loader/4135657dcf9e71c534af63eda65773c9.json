{"ast":null,"code":"var _jsxFileName = \"/Users/yoonji_kim/mbti_react/src/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Data } from './Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  var [idx, setIdx] = useState(0); //idx를 넘겨주는 용도\n\n  const endPoint = 3; //질문의 갯수\n\n  function goNext() {\n    console.log(idx);\n\n    if (++idx === endPoint) {\n      console.log(\"넘어가자\");\n    } else {\n      setIdx(idx + 1);\n    }\n  } //goNext에서 결과값을 반환하면\n  //dictionary는 key,value의 pair로 저장하여, 리스트에서 인덱스로 접근하는 거와 다르게 key의 값으로 접근하여, 원하는 값을 찾을때 빠르게 찾을 수 있다는 장점\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: Data[idx].q\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goNext,\n      children: Data[idx].a[0].answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: goNext,\n      children: Data[idx].a[1].answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this); //처음에는 0번째 질문이 나오고\n  //button을 누르면 다음 질문으로 넘어가야함\n  //setQna함수는 qna를 다음 질문으로 만드는 역할\n  //마지막질문을 눌렀을때 result페이지로 넘어가야함\n  //11개의 질문이 있을때,idx는10인것이 마지막\n}\n\n_s(Test, \"orvjE8mRJyZtmNwQkncviHPDWbU=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","Data","Test","idx","setIdx","endPoint","goNext","console","log","q","a","answer"],"sources":["/Users/yoonji_kim/mbti_react/src/Test.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Data } from './Data';\n\nfunction Test() {\n    \n  var [idx,setIdx] = useState(0); //idx를 넘겨주는 용도\n\n  const endPoint = 3; //질문의 갯수\n\n  function goNext() {\n      console.log(idx);\n      if(++idx === endPoint){\n          console.log(\"넘어가자\");\n      }\n      else{\n          setIdx(idx+1);\n      }\n  }\n  //goNext에서 결과값을 반환하면\n  \n  //dictionary는 key,value의 pair로 저장하여, 리스트에서 인덱스로 접근하는 거와 다르게 key의 값으로 접근하여, 원하는 값을 찾을때 빠르게 찾을 수 있다는 장점\n  return( \n      <div>\n          <p>{Data[idx].q}</p>\n          <button onClick={goNext}>\n              {Data[idx].a[0].answer}\n          </button>\n          <button onClick={goNext}>\n              {Data[idx].a[1].answer}\n          </button>\n      </div>\n  );\n  //처음에는 0번째 질문이 나오고\n  //button을 누르면 다음 질문으로 넘어가야함\n  //setQna함수는 qna를 다음 질문으로 만드는 역할\n  //마지막질문을 눌렀을때 result페이지로 넘어가야함\n  //11개의 질문이 있을때,idx는10인것이 마지막\n}\n\nexport default Test"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAqB,QAArB;;;AAEA,SAASC,IAAT,GAAgB;EAAA;;EAEd,IAAI,CAACC,GAAD,EAAKC,MAAL,IAAeJ,QAAQ,CAAC,CAAD,CAA3B,CAFc,CAEkB;;EAEhC,MAAMK,QAAQ,GAAG,CAAjB,CAJc,CAIM;;EAEpB,SAASC,MAAT,GAAkB;IACdC,OAAO,CAACC,GAAR,CAAYL,GAAZ;;IACA,IAAG,EAAEA,GAAF,KAAUE,QAAb,EAAsB;MAClBE,OAAO,CAACC,GAAR,CAAY,MAAZ;IACH,CAFD,MAGI;MACAJ,MAAM,CAACD,GAAG,GAAC,CAAL,CAAN;IACH;EACJ,CAda,CAed;EAEA;;;EACA,oBACI;IAAA,wBACI;MAAA,UAAIF,IAAI,CAACE,GAAD,CAAJ,CAAUM;IAAd;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAEH,MAAjB;MAAA,UACKL,IAAI,CAACE,GAAD,CAAJ,CAAUO,CAAV,CAAY,CAAZ,EAAeC;IADpB;MAAA;MAAA;MAAA;IAAA,QAFJ,eAKI;MAAQ,OAAO,EAAEL,MAAjB;MAAA,UACKL,IAAI,CAACE,GAAD,CAAJ,CAAUO,CAAV,CAAY,CAAZ,EAAeC;IADpB;MAAA;MAAA;MAAA;IAAA,QALJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ,CAlBc,CA6Bd;EACA;EACA;EACA;EACA;AACD;;GAlCQT,I;;KAAAA,I;AAoCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}